// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectApi.Data;

#nullable disable

namespace ProjectApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240514170738_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectApi.Models.GitProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GithubUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiveDemoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectImg")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GitProjects");
                });

            modelBuilder.Entity("ProjectApi.Models.TechIcon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Technology")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TechIcons");
                });

            modelBuilder.Entity("ProjectApi.Models.TechStack", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("GitProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TechIconId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GitProjectId");

                    b.HasIndex("TechIconId");

                    b.ToTable("TechStacks");
                });

            modelBuilder.Entity("ProjectApi.Models.TechStack", b =>
                {
                    b.HasOne("ProjectApi.Models.GitProject", null)
                        .WithMany("Technologies")
                        .HasForeignKey("GitProjectId");

                    b.HasOne("ProjectApi.Models.TechIcon", "TechIcon")
                        .WithMany()
                        .HasForeignKey("TechIconId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TechIcon");
                });

            modelBuilder.Entity("ProjectApi.Models.GitProject", b =>
                {
                    b.Navigation("Technologies");
                });
#pragma warning restore 612, 618
        }
    }
}
